-- Crear la base de datos (si no existe)
-- CREATE DATABASE GestionEventosUniversidad;
-- GO
-- USE GestionEventosUniversidad;
-- GO

-- Tabla para las etiquetas (Categorías de eventos)
CREATE TABLE Etiquetas (
    id INT PRIMARY KEY IDENTITY(1,1),
    nombre VARCHAR(50) NOT NULL UNIQUE
);
GO

-- Tabla para los Superusuarios (Administradores)
CREATE TABLE Superusuarios (
    id INT PRIMARY KEY IDENTITY(1,1),
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL -- ¡Nunca guardar contraseñas en texto plano!
);
GO

-- Tabla para los Estudiantes
CREATE TABLE Estudiantes (
    id INT PRIMARY KEY IDENTITY(1,1),
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    fecha_registro DATETIME DEFAULT GETDATE()
);
GO

-- Tabla principal de Eventos
CREATE TABLE Eventos (
    id INT PRIMARY KEY IDENTITY(1,1),
    nombre VARCHAR(200) NOT NULL,
    descripcion TEXT,
    imagen_url VARCHAR(255), -- Ruta a la imagen subida
    fecha_evento DATE NOT NULL,
    fecha_creacion DATETIME DEFAULT GETDATE(),
    id_creador INT NOT NULL, -- El superusuario que lo crea
    FOREIGN KEY (id_creador) REFERENCES Superusuarios(id)
);
GO

-- Tabla de unión para la relación Muchos-a-Muchos entre Eventos y Etiquetas
CREATE TABLE Evento_Etiqueta (
    id_evento INT NOT NULL,
    id_etiqueta INT NOT NULL,
    PRIMARY KEY (id_evento, id_etiqueta),
    FOREIGN KEY (id_evento) REFERENCES Eventos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_etiqueta) REFERENCES Etiquetas(id) ON DELETE CASCADE
);
GO

-- Tabla para que los estudiantes sigan eventos
CREATE TABLE Estudiante_Sigue_Evento (
    id_estudiante INT NOT NULL,
    id_evento INT NOT NULL,
    fecha_seguimiento DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (id_estudiante, id_evento),
    FOREIGN KEY (id_estudiante) REFERENCES Estudiantes(id) ON DELETE CASCADE,
    FOREIGN KEY (id_evento) REFERENCES Eventos(id) ON DELETE CASCADE
);
GO

-- --- INSERCIÓN DE DATOS INICIALES (PARA PROBAR) ---
-- Insertar algunas etiquetas de ejemplo
INSERT INTO Etiquetas (nombre) VALUES
('Tecnología'), ('Deportes'), ('Cultura'), ('Académico'), ('Social'), ('Arte');
GO

-- Insertar un superusuario de ejemplo (la contraseña es 'admin123' hasheada)
-- Puedes usar un generador de hashes SHA-256 online para esto.
INSERT INTO Superusuarios (username, password_hash) VALUES
('admin', '240be518fabd2724ddb6f04eeb1da5967448d7e831c08c8fa822809f74c720a9'); -- Hash para 'admin123'
GO






eventos_universidad/
├── admin/
│   ├── index.php          # Panel del Superusuario (CRUD)
│   └── procesar_evento.php # Lógica para guardar/editar/eliminar eventos
├── assets/
│   ├── css/
│   │   └── style.css      # Estilos generales
│   ├── js/
│   │   └── main.js        # JavaScript para el calendario
│   └── uploads/           # Carpeta para guardar las imágenes de eventos (dar permisos)
├── student/
│   └── index.php          # Interfaz del Estudiante
├── db_connect.php         # Archivo de conexión a la base de datos
├── functions.php          # Funciones reutilizables (obtener eventos, etc.)
├── index.php              # Página principal (Calendario y eventos)
└── registrar_estudiante.php # Lógica para registrar nuevos estudiantes



<?php
// db_connect.php
 $serverName = "localhost"; // o el nombre de tu servidor SQL
 $connectionInfo = array(
    "Database" => "GestionEventosUniversidad",
    "UID" => "tu_usuario_sql", // Tu usuario de SQL Server
    "PWD" => "tu_contraseña_sql" // Tu contraseña de SQL Server
);

// Establecer la conexión
 $conn = sqlsrv_connect($serverName, $connectionInfo);

if ($conn === false) {
    die(print_r(sqlsrv_errors(), true));
}
?>



<?php
session_start();
require_once 'db_connect.php';
require_once 'functions.php';

// Lógica del calendario
 $mes = isset($_GET['mes']) ? (int)$_GET['mes'] : date('n');
 $anio = isset($_GET['anio']) ? (int)$_GET['anio'] : date('Y');

// Validar mes y año
if ($mes < 1) { $mes = 12; $anio--; }
if ($mes > 12) { $mes = 1; $anio++; }

 $eventosDelMes = obtenerEventosPorMes($conn, $mes, $anio);
 $eventosGenerales = obtenerTodosLosEventos($conn);

// Mapear eventos a sus días para el calendario
 $eventosPorDia = [];
foreach ($eventosDelMes as $evento) {
    $dia = date('j', strtotime($evento['fecha_evento']));
    $eventosPorDia[$dia][] = $evento;
}
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Eventos Universitarios</title>
    <link rel="stylesheet" href="assets/css/style.css">
</head>
<body>
    <header>
        <h1>Portal de Eventos Universitarios</h1>
        <nav>
            <a href="index.php">Inicio</a>
            <a href="student/index.php">Soy Estudiante</a>
            <a href="admin/index.php">Soy Administrador</a>
        </nav>
    </header>

    <main>
        <!-- Sección del Calendario -->
        <section class="calendar-container">
            <div class="calendar-header">
                <button id="btnAnterior">&lt;</button>
                <h2 id="mesAnio"><?php echo strftime('%B %Y', mktime(0, 0, 0, $mes, 1, $anio)); ?></h2>
                <button id="btnSiguiente">&gt;</button>
            </div>
            <div class="calendar-grid">
                <div class="day-name">Dom</div><div class="day-name">Lun</div><div class="day-name">Mar</div><div class="day-name">Mié</div><div class="day-name">Jue</div><div class="day-name">Vie</div><div class="day-name">Sáb</div>
                <?php
                $primerDia = mktime(0, 0, 0, $mes, 1, $anio);
                $diasEnMes = date('t', $primerDia);
                $diaDeSemana = date('w', $primerDia);
                
                // Rellenar días vacíos al inicio
                for ($i = 0; $i < $diaDeSemana; $i++) {
                    echo '<div class="day empty"></div>';
                }

                // Imprimir los días del mes
                for ($dia = 1; $dia <= $diasEnMes; $dia++) {
                    $claseDia = 'day';
                    if (date('Y-m-d') == date("$anio-$mes-$dia")) {
                        $claseDia .= ' today';
                    }
                    echo '<div class="' . $claseDia . '">';
                    echo '<span class="day-number">' . $dia . '</span>';
                    if (isset($eventosPorDia[$dia])) {
                        echo '<div class="event-indicators">';
                        foreach ($eventosPorDia[$dia] as $evento) {
                            echo '<span class="event-dot" title="' . htmlspecialchars($evento['nombre']) . '"></span>';
                        }
                        echo '</div>';
                    }
                    echo '</div>';
                }
                ?>
            </div>
        </section>

        <!-- Sección de Registro de Estudiantes -->
        <section class="register-section">
            <h3>¿Eres un estudiante? ¡Regístrate!</h3>
            <form action="registrar_estudiante.php" method="POST">
                <input type="text" name="nombre" placeholder="Tu Nombre Completo" required>
                <input type="email" name="email" placeholder="Correo Institucional" required>
                <input type="password" name="password" placeholder="Contraseña" required>
                <button type="submit">Registrarse</button>
            </form>
        </section>

        <!-- Sección General de Eventos -->
        <section class="events-feed">
            <h2>Próximos Eventos</h2>
            <?php if (count($eventosGenerales) > 0): ?>
                <?php foreach ($eventosGenerales as $evento): ?>
                    <article class="event-card">
                        <img src="assets/uploads/<?php echo htmlspecialchars($evento['imagen_url']); ?>" alt="<?php echo htmlspecialchars($evento['nombre']); ?>">
                        <div class="event-content">
                            <h3><?php echo htmlspecialchars($evento['nombre']); ?></h3>
                            <p class="event-date">Fecha: <?php echo date('d/m/Y', strtotime($evento['fecha_evento'])); ?></p>
                            <p><?php echo nl2br(htmlspecialchars($evento['descripcion'])); ?></p>
                            <div class="event-tags">
                                <?php foreach (obtenerEtiquetasDeEvento($conn, $evento['id']) as $etiqueta): ?>
                                    <span class="tag"><?php echo htmlspecialchars($etiqueta['nombre']); ?></span>
                                <?php endforeach; ?>
                            </div>
                        </div>
                    </article>
                <?php endforeach; ?>
            <?php else: ?>
                <p>No hay eventos programados por el momento.</p>
            <?php endif; ?>
        </section>
    </main>

    <script src="assets/js/main.js"></script>
</body>
</html>




<?php
// functions.php

function obtenerTodosLosEventos($conn) {
    $sql = "SELECT * FROM Eventos ORDER BY fecha_evento ASC";
    $stmt = sqlsrv_query($conn, $sql);
    $eventos = [];
    while ($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) {
        $eventos[] = $row;
    }
    return $eventos;
}

function obtenerEventosPorMes($conn, $mes, $anio) {
    $sql = "SELECT * FROM Eventos WHERE MONTH(fecha_evento) = ? AND YEAR(fecha_evento) = ? ORDER BY fecha_evento ASC";
    $params = array($mes, $anio);
    $stmt = sqlsrv_query($conn, $sql, $params);
    $eventos = [];
    while ($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) {
        $eventos[] = $row;
    }
    return $eventos;
}

function obtenerEtiquetasDeEvento($conn, $id_evento) {
    $sql = "SELECT e.nombre FROM Etiquetas e
            JOIN Evento_Etiqueta ee ON e.id = ee.id_etiqueta
            WHERE ee.id_evento = ?";
    $params = array($id_evento);
    $stmt = sqlsrv_query($conn, $sql, $params);
    $etiquetas = [];
    while ($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) {
        $etiquetas[] = $row;
    }
    return $etiquetas;
}

// Otras funciones que necesitaremos más adelante...
function obtenerTodasLasEtiquetas($conn) {
    $sql = "SELECT * FROM Etiquetas";
    $stmt = sqlsrv_query($conn, $sql);
    $etiquetas = [];
    while ($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) {
        $etiquetas[] = $row;
    }
    return $etiquetas;
}
?>



document.addEventListener('DOMContentLoaded', function() {
    const btnAnterior = document.getElementById('btnAnterior');
    const btnSiguiente = document.getElementById('btnSiguiente');
    const mesAnioH2 = document.getElementById('mesAnio');

    // Obtener mes y año actuales de la URL
    let params = new URLSearchParams(window.location.search);
    let mes = parseInt(params.get('mes')) || new Date().getMonth() + 1;
    let anio = parseInt(params.get('anio')) || new Date().getFullYear();

    function actualizarURL() {
        const url = new URL(window.location);
        url.searchParams.set('mes', mes);
        url.searchParams.set('anio', anio);
        window.location.href = url.toString();
    }

    btnAnterior.addEventListener('click', function() {
        mes--;
        if (mes < 1) {
            mes = 12;
            anio--;
        }
        actualizarURL();
    });

    btnSiguiente.addEventListener('click', function() {
        mes++;
        if (mes > 12) {
            mes = 1;
            anio++;
        }
        actualizarURL();
    });
});



/* Estilos generales */
body { font-family: Arial, sans-serif; margin: 0; background-color: #f4f4f4; }
header { background-color: #003366; color: white; padding: 1rem; text-align: center; }
header nav a { color: white; margin: 0 15px; text-decoration: none; }
main { padding: 20px; max-width: 1200px; margin: auto; }

/* Calendario */
.calendar-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); margin-bottom: 30px; }
.calendar-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
.calendar-header button { background: #0056b3; color: white; border: none; padding: 10px 15px; cursor: pointer; border-radius: 5px; }
.calendar-grid { display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px; }
.day-name { font-weight: bold; text-align: center; padding: 10px 0; }
.day { border: 1px solid #ddd; min-height: 80px; padding: 5px; position: relative; background: #fafafa; }
.day.empty { border: none; background: none; }
.day.today { background: #e6f7ff; border-color: #91d5ff; }
.day-number { font-weight: bold; }
.event-indicators { margin-top: 5px; }
.event-dot { display: inline-block; width: 8px; height: 8px; background-color: #ff4d4f; border-radius: 50%; margin-right: 3px; }

/* Feed de Eventos */
.events-feed h2 { border-bottom: 2px solid #003366; padding-bottom: 10px; }
.event-card { display: flex; background: white; border: 1px solid #ddd; border-radius: 8px; margin-bottom: 20px; overflow: hidden; }
.event-card img { width: 200px; height: 150px; object-fit: cover; }
.event-content { padding: 15px; flex-grow: 1; }
.event-content h3 { margin-top: 0; }
.event-date { font-size: 0.9em; color: #555; font-style: italic; }
.event-tags { margin-top: 10px; }
.tag { background: #e0e0e0; color: #333; padding: 3px 8px; border-radius: 12px; font-size: 0.8em; margin-right: 5px; display: inline-block; }

/* Registro */
.register-section { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); margin-bottom: 30px; text-align: center; }
.register-section form { display: flex; flex-wrap: wrap; gap: 10px; justify-content: center; }
.register-section input { padding: 10px; border: 1px solid #ccc; border-radius: 5px; }
.register-section button { padding: 10px 20px; background: #28a745; color: white; border: none; border-radius: 5px; cursor: pointer; }


<?php
session_start();
// TODO: Implementar un sistema de login simple para proteger esta página.
// Por ahora, asumiremos que el administrador ya está "logueado".
require_once '../db_connect.php';
require_once '../functions.php';

 $mensaje = '';
 $eventoEditar = null;

// Lógica para eliminar
if (isset($_GET['eliminar'])) {
    $id = (int)$_GET['eliminar'];
    $sql = "DELETE FROM Eventos WHERE id = ?";
    $params = array($id);
    if (sqlsrv_query($conn, $sql, $params)) {
        $mensaje = "Evento eliminado correctamente.";
    } else {
        $mensaje = "Error al eliminar el evento.";
    }
}

// Lógica para cargar un evento para editar
if (isset($_GET['editar'])) {
    $id = (int)$_GET['editar'];
    $sql = "SELECT * FROM Eventos WHERE id = ?";
    $params = array($id);
    $stmt = sqlsrv_query($conn, $sql, $params);
    $eventoEditar = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC);
}

 $eventos = obtenerTodosLosEventos($conn);
 $etiquetasDisponibles = obtenerTodasLasEtiquetas($conn);
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Panel de Administración</title>
    <link rel="stylesheet" href="../assets/css/style.css">
    <style>
        .admin-form { background: #f9f9f9; padding: 20px; border-radius: 8px; margin-bottom: 30px; }
        .admin-form input, .admin-form textarea, .admin-form select { width: 100%; padding: 10px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 5px; box-sizing: border-box; }
        .checkbox-group label { display: inline-block; margin-right: 15px; }
        .btn { padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; color: white; }
        .btn-primary { background: #007bff; }
        .btn-danger { background: #dc3545; }
        .btn-warning { background: #ffc107; color: #333; }
        .event-list-table { width: 100%; border-collapse: collapse; }
        .event-list-table th, .event-list-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        .event-list-table th { background-color: #f2f2f2; }
    </style>
</head>
<body>
    <header>
        <h1>Panel de Administración de Eventos</h1>
        <nav><a href="../index.php">Volver al Inicio</a></nav>
    </header>

    <main class="admin-main">
        <?php if ($mensaje): ?>
            <p style="background: #d4edda; color: #155724; padding: 10px; border-radius: 5px;"><?php echo $mensaje; ?></p>
        <?php endif; ?>

        <!-- Formulario de Creación/Edición de Eventos -->
        <section class="admin-form">
            <h2><?php echo $eventoEditar ? 'Editar Evento' : 'Crear Nuevo Evento'; ?></h2>
            <form action="procesar_evento.php" method="POST" enctype="multipart/form-data">
                <input type="hidden" name="id_evento" value="<?php echo $eventoEditar['id'] ?? ''; ?>">
                
                <label for="nombre">Nombre del Evento:</label>
                <input type="text" id="nombre" name="nombre" value="<?php echo htmlspecialchars($eventoEditar['nombre'] ?? ''); ?>" required>

                <label for="fecha_evento">Fecha del Evento:</label>
                <input type="date" id="fecha_evento" name="fecha_evento" value="<?php echo $eventoEditar ? date('Y-m-d', strtotime($eventoEditar['fecha_evento'])) : ''; ?>" required>

                <label for="imagen">Imagen del Evento:</label>
                <input type="file" id="imagen" name="imagen" accept="image/*">
                <?php if ($eventoEditar && $eventoEditar['imagen_url']): ?>
                    <p>Imagen actual: <img src="../assets/uploads/<?php echo htmlspecialchars($eventoEditar['imagen_url']); ?>" width="100"></p>
                <?php endif; ?>

                <label for="descripcion">Descripción:</label>
                <textarea id="descripcion" name="descripcion" rows="5" required><?php echo htmlspecialchars($eventoEditar['descripcion'] ?? ''); ?></textarea>

                <label>Etiquetas (Máximo 5):</label>
                <div class="checkbox-group">
                    <?php foreach ($etiquetasDisponibles as $etiqueta): ?>
                        <label>
                            <input type="checkbox" name="etiquetas[]" value="<?php echo $etiqueta['id']; ?>"
                                <?php
                                if ($eventoEditar) {
                                    $etiquetasEvento = array_column(obtenerEtiquetasDeEvento($conn, $eventoEditar['id']), 'id');
                                    if (in_array($etiqueta['id'], $etiquetasEvento)) {
                                        echo 'checked';
                                    }
                                }
                                ?>>
                            <?php echo htmlspecialchars($etiqueta['nombre']); ?>
                        </label>
                    <?php endforeach; ?>
                </div>

                <button type="submit" class="btn btn-primary">
                    <?php echo $eventoEditar ? 'Actualizar Evento' : 'Crear Evento'; ?>
                </button>
            </form>
        </section>

        <!-- Lista de Eventos Existentes -->
        <section>
            <h2>Eventos Existentes</h2>
            <table class="event-list-table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Fecha</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($eventos as $evento): ?>
                    <tr>
                        <td><?php echo htmlspecialchars($evento['nombre']); ?></td>
                        <td><?php echo date('d/m/Y', strtotime($evento['fecha_evento'])); ?></td>
                        <td>
                            <a href="?editar=<?php echo $evento['id']; ?>" class="btn btn-warning">Editar</a>
                            <a href="?eliminar=<?php echo $evento['id']; ?>" class="btn btn-danger" onclick="return confirm('¿Estás seguro de eliminar este evento?');">Eliminar</a>
                        </td>
                    </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </section>
    </main>
</body>
</html>



<?php
require_once '../db_connect.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id_evento = isset($_POST['id_evento']) ? (int)$_POST['id_evento'] : null;
    $nombre = $_POST['nombre'];
    $fecha_evento = $_POST['fecha_evento'];
    $descripcion = $_POST['descripcion'];
    $etiquetas = isset($_POST['etiquetas']) ? array_slice($_POST['etiquetas'], 0, 5) : []; // Limitar a 5
    $imagen_url = null;

    // Manejo de la imagen
    if (isset($_FILES['imagen']) && $_FILES['imagen']['error'] === UPLOAD_ERR_OK) {
        $nombreArchivo = basename($_FILES["imagen"]["name"]);
        $rutaDestino = "../assets/uploads/" . $nombreArchivo;
        if (move_uploaded_file($_FILES["imagen"]["tmp_name"], $rutaDestino)) {
            $imagen_url = $nombreArchivo;
        }
    }

    // Si es edición y no se sube nueva imagen, conservar la antigua
    if ($id_evento && !$imagen_url) {
        $sql = "SELECT imagen_url FROM Eventos WHERE id = ?";
        $stmt = sqlsrv_query($conn, $sql, array($id_evento));
        $row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC);
        $imagen_url = $row['imagen_url'];
    }

    // Insertar o Actualizar Evento
    if ($id_evento) {
        // Actualizar
        $sql = "UPDATE Eventos SET nombre = ?, descripcion = ?, fecha_evento = ?, imagen_url = ? WHERE id = ?";
        $params = array($nombre, $descripcion, $fecha_evento, $imagen_url, $id_evento);
    } else {
        // Insertar
        // id_creador es 1 (el admin que creamos por defecto)
        $sql = "INSERT INTO Eventos (nombre, descripcion, fecha_evento, imagen_url, id_creador) VALUES (?, ?, ?, ?, 1)";
        $params = array($nombre, $descripcion, $fecha_evento, $imagen_url);
    }
    
    $stmt = sqlsrv_query($conn, $sql, $params);

    if ($stmt) {
        // Obtener el ID del evento insertado o actualizado
        $evento_id = $id_evento ? $id_evento : sqlsrv_get_last_insert_id($conn);

        // Eliminar etiquetas antiguas para este evento
        $sql_delete_tags = "DELETE FROM Evento_Etiqueta WHERE id_evento = ?";
        sqlsrv_query($conn, $sql_delete_tags, array($evento_id));

        // Insertar las nuevas etiquetas
        foreach ($etiquetas as $id_etiqueta) {
            $sql_tag = "INSERT INTO Evento_Etiqueta (id_evento, id_etiqueta) VALUES (?, ?)";
            sqlsrv_query($conn, $sql_tag, array($evento_id, $id_etiqueta));
        }
        
        header("Location: index.php?status=success");
    } else {
        die(print_r(sqlsrv_errors(), true));
    }
}
?>




<?php
session_start();
// TODO: Implementar sistema de login para estudiantes. Por ahora, usaremos un ID de estudiante fijo para demostrar.
// En una app real, este ID vendría de la sesión después del login.
 $_SESSION['estudiante_id'] = 1; // ID de estudiante de ejemplo

require_once '../db_connect.php';
require_once '../functions.php';

 $estudiante_id = $_SESSION['estudiante_id'];

// Procesar seguir/dejar de seguir
if (isset($_POST['accion']) && isset($_POST['id_evento'])) {
    $id_evento = (int)$_POST['id_evento'];
    if ($_POST['accion'] === 'seguir') {
        $sql = "IF NOT EXISTS (SELECT 1 FROM Estudiante_Sigue_Evento WHERE id_estudiante = ? AND id_evento = ?)
                INSERT INTO Estudiante_Sigue_Evento (id_estudiante, id_evento) VALUES (?, ?)";
        sqlsrv_query($conn, $sql, array($estudiante_id, $id_evento, $estudiante_id, $id_evento));
    } elseif ($_POST['accion'] === 'no_seguir') {
        $sql = "DELETE FROM Estudiante_Sigue_Evento WHERE id_estudiante = ? AND id_evento = ?";
        sqlsrv_query($conn, $sql, array($estudiante_id, $id_evento));
    }
    header("Location: " . $_SERVER['PHP_SELF']);
    exit();
}

// Obtener etiquetas de interés del estudiante (simulado, debería venir de una tabla de preferencias)
// Por simplicidad, filtraremos por etiquetas seleccionadas en el formulario de esta misma página.
 $etiquetasFiltro = isset($_GET['tags']) ? $_GET['tags'] : [];
 $eventosFiltrados = obtenerEventosFiltrados($conn, $etiquetasFiltro);
 $etiquetasDisponibles = obtenerTodasLasEtiquetas($conn);

// Función para obtener eventos filtrados
function obtenerEventosFiltrados($conn, $idsEtiquetas) {
    if (empty($idsEtiquetas)) {
        return obtenerTodosLosEventos($conn); // Si no hay filtro, mostrar todos
    }
    
    $placeholders = implode(',', array_fill(0, count($idsEtiquetas), '?'));
    $sql = "SELECT DISTINCT e.* FROM Eventos e
            JOIN Evento_Etiqueta ee ON e.id = ee.id_evento
            WHERE ee.id_etiqueta IN ($placeholders)
            ORDER BY e.fecha_evento ASC";
    $stmt = sqlsrv_query($conn, $sql, $idsEtiquetas);
    
    $eventos = [];
    while ($row = sqlsrv_fetch_array($stmt, SQLSRV_FETCH_ASSOC)) {
        $eventos[] = $row;
    }
    return $eventos;
}
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Portal del Estudiante</title>
    <link rel="stylesheet" href="../assets/css/style.css">
    <style>
        .filter-section { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
        .filter-section h3 { margin-top: 0; }
        .follow-btn { background: #007bff; color: white; border: none; padding: 8px 12px; border-radius: 5px; cursor: pointer; }
        .follow-btn.following { background: #6c757d; }
    </style>
</head>
<body>
    <header>
        <h1>Mi Portal de Eventos</h1>
        <nav><a href="../index.php">Volver al Inicio</a></nav>
    </header>

    <main>
        <!-- Sección de Filtros por Etiqueta -->
        <section class="filter-section">
            <h3>Filtrar por mis intereses:</h3>
            <form method="GET" action="">
                <?php foreach ($etiquetasDisponibles as $etiqueta): ?>
                    <label style="margin-right: 15px;">
                        <input type="checkbox" name="tags[]" value="<?php echo $etiqueta['id']; ?>"
                            <?php if (in_array($etiqueta['id'], $etiquetasFiltro)) echo 'checked'; ?>>
                        <?php echo htmlspecialchars($etiqueta['nombre']); ?>
                    </label>
                <?php endforeach; ?>
                <button type="submit" class="btn btn-primary">Filtrar</button>
            </form>
        </section>

        <!-- Feed de Eventos Filtrados -->
        <section class="events-feed">
            <h2>Eventos Recomendados para Ti</h2>
            <?php if (count($eventosFiltrados) > 0): ?>
                <?php foreach ($eventosFiltrados as $evento): ?>
                    <?php 
                    // Verificar si el estudiante ya sigue este evento
                    $sql_check = "SELECT 1 FROM Estudiante_Sigue_Evento WHERE id_estudiante = ? AND id_evento = ?";
                    $stmt_check = sqlsrv_query($conn, $sql_check, array($estudiante_id, $evento['id']));
                    $siguiendo = sqlsrv_has_rows($stmt_check);
                    ?>
                    <article class="event-card">
                        <img src="../assets/uploads/<?php echo htmlspecialchars($evento['imagen_url']); ?>" alt="<?php echo htmlspecialchars($evento['nombre']); ?>">
                        <div class="event-content">
                            <h3><?php echo htmlspecialchars($evento['nombre']); ?></h3>
                            <p class="event-date">Fecha: <?php echo date('d/m/Y', strtotime($evento['fecha_evento'])); ?></p>
                            <p><?php echo nl2br(htmlspecialchars($evento['descripcion'])); ?></p>
                            <div class="event-tags">
                                <?php foreach (obtenerEtiquetasDeEvento($conn, $evento['id']) as $etiqueta): ?>
                                    <span class="tag"><?php echo htmlspecialchars($etiqueta['nombre']); ?></span>
                                <?php endforeach; ?>
                            </div>
                            <form method="POST" style="margin-top: 10px;">
                                <input type="hidden" name="id_evento" value="<?php echo $evento['id']; ?>">
                                <?php if ($siguiendo): ?>
                                    <button type="submit" name="accion" value="no_seguir" class="follow-btn following">Dejar de Seguir</button>
                                <?php else: ?>
                                    <button type="submit" name="accion" value="seguir" class="follow-btn">Seguir Evento</button>
                                <?php endif; ?>
                            </form>
                        </div>
                    </article>
                <?php endforeach; ?>
            <?php else: ?>
                <p>No hay eventos que coincidan con tus intereses seleccionados. ¡Prueba con otras etiquetas!</p>
            <?php endif; ?>
        </section>
    </main>
</body>
</html>



<?php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    require_once 'db_connect.php';

    $nombre = $_POST['nombre'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    // ¡Hashear la contraseña!
    $password_hash = hash('sha256', $password);

    $sql = "INSERT INTO Estudiantes (nombre, email, password_hash) VALUES (?, ?, ?)";
    $params = array($nombre, $email, $password_hash);

    $stmt = sqlsrv_query($conn, $sql, $params);

    if ($stmt) {
        // Redirigir a la página principal con un mensaje de éxito
        header("Location: index.php?registro=exitoso");
    } else {
        // Manejar error, por ejemplo, si el email ya existe
        die("Error al registrar. Es posible que el email ya esté en uso. " . print_r(sqlsrv_errors(), true));
    }
}
?>
